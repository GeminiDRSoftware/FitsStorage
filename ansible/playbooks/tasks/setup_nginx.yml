- name: install nginx packages
  yum:
    name:
      - nginx
- name: install uwsgi (nginx)
  command: bash -c "python3 -m pip install uwsgi"
- name: Install CertBot and associated
  yum:
    name:
      - certbot
      - python3-certbot-nginx
    state: latest
  when: enable_certbot
- name: ensure nginx folders exist (nginx)
  file:
    path: '{{ item.path }}'
    state: directory
    mode: '{{ item.mode }}'
    owner: '{{ item.owner }}'
    group: '{{ item.group }}'
  with_items:
    - { path: /opt/uwsgi, owner: fitsdata, group: fitsdata, mode: "u+rwx,g+rwx,o+rx" }
    - { path: /etc/nginx, owner: nginx, group: fitsdata, mode: "u+rwx,g+rwx,o-w" }
- name: Copy UWSGI service script (nginx)
  copy:
    src: ../../otherfiles/etc_systemd_system_fits-uwsgi.service
    dest: /etc/systemd/system/fits-uwsgi.service
- name: Copy NGINX service script (nginx)
  copy:
    src: ../../otherfiles/etc_systemd_system_fits-nginx.service
    dest: /etc/systemd/system/fits-nginx.service
- name: Configure UWSGI (nginx)
  copy:
    src: ../../otherfiles/uwsgi.ini
    dest: /opt/uwsgi/fitsservice.ini
- name: Configure NGINX (nginx)
  copy:
    src: ../../otherfiles/{{ nginx_config }}
    dest: /etc/nginx/nginx.conf
- name: Install MIME Config (nginx)
  copy:
    src: ../../otherfiles/nginx-mime.types
    dest: /etc/nginx/mime.types
- name: (ARCDEV) Setup Let's Encrypt (nginx)
  command: certbot certonly --nginx -d arcdev.gemini.edu
  args:
    creates: /etc/letsencrypt
  notify: restart fits-nginx
  when: "'arcdev' in inventory_hostname and enable_certbot"
- name: (ARCHIVE) Setup Let's Encrypt (nginx)
  command: certbot certonly --nginx -d archive.gemini.edu
  args:
    creates: /etc/letsencrypt
  notify: restart fits-nginx
  when: "'archive' in inventory_hostname and enable_certbot"
