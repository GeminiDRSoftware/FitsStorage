version: "3"

services:

  elk:
    image: sebp/elk
    environment:
      - MAX_MAP_COUNT=262144
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.5.1
    user: root
    privileged: true
    volumes:
      - "./filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command: filebeat -e -strict.perms=false
    environment:
      - output.elasticsearch.hosts=["elk:9200"]

  # elk-init:
  #   image: centos:centos8
  #   depends_on:
  #     - elk
  #   command: 'sleep 60 && curl -d "{}" -X PUT -H "Content-Type: application/json" http://elk:9200/fitsstorage'

  postgres-onsite:
    image: postgres:12
    environment:
      - POSTGRES_USER=fitsdata
      - POSTGRES_PASSWORD=fitsdata
      - POSTGRES_DB=fitsdata

  postgres-archive:
    image: postgres:12
    environment:
      - POSTGRES_USER=fitsdata
      - POSTGRES_PASSWORD=fitsdata
      - POSTGRES_DB=fitsdata

  postgres-init-onsite:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-onsite
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-onsite
    command: python3 ./fits_storage/scripts/create_tables.py

  postgres-init-onsite-views:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-onsite
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-onsite
    command: psql fitsdata < ./sql/views.sql

  postgres-init-archive:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-archive
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
    command: python3 ./fits_storage/scripts/create_tables.py

  postgres-init-archive-views:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-archive
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
    command: psql fitsdata < ./sql/views.sql

  api:
    build:
      context: .
      dockerfile: docker/archive/Dockerfile
    image: fitsimage:latest
    depends_on:
      - postgres-init-archive
      - postgres-archive
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
      - USE_AS_ARCHIVE=True
      - API_BACKEND_LOCATION=:8000
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/archive-data-upload_staging:/data/upload_staging"
      - "~/testdata/archive-sci-dataflow:/sci/dataflow"
    command:  python3 fits_storage/scripts/api_backend.py

  archive:
    build:
      context: .
      dockerfile: docker/archive/Dockerfile
    image: fitsimage:latest
    depends_on:
      - postgres-init-archive
      - postgres-archive
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
      - USE_AS_ARCHIVE=True
      - API_BACKEND_LOCATION=api:8000
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/archive-data-upload_staging:/data/upload_staging"
      - "~/testdata/archive-sci-dataflow:/sci/dataflow"
    ports:
      - "80:80"
      - "443:443"

  archive-ingest-service:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - api
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
      - USE_AS_ARCHIVE=True
      - API_BACKEND_LOCATION=api:8000
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/archive-data-upload_staging:/data/upload_staging"
      - "~/testdata/archive-sci-dataflow:/sci/dataflow"
    # command: python3 fits_storage/scripts/service_ingest_queue.py --make-previews
    command: python3 fits_storage/scripts/service_ingest_queue.py

  onsite:
    build:
      context: .
      dockerfile: docker/archive/Dockerfile
    image: fitsimage:latest
    depends_on:
      - postgres-init-onsite
      - postgres-onsite
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-onsite
      - USE_AS_ARCHIVE=False
      - EXPORT_DESTINATIONS=http://archive
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/onsite-data-upload_staging:/data/upload_staging"
      - "~/testdata/onsite-sci-dataflow:/sci/dataflow"
    ports:
      - "8088:80"
      - "8443:443"

  add-to-ingest-queue:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-onsite
      - postgres-onsite
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-onsite
      - EXPORT_DESTINATIONS=http://archive
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/onsite-data-upload_staging:/data/upload_staging"
      - "~/testdata/onsite-sci-dataflow:/sci/dataflow"
    command: python3 fits_storage/scripts/add_to_ingest_queue.py

  onsite-ingest-service:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-onsite
      - postgres-onsite
      - add-to-ingest-queue
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-onsite
      - EXPORT_DESTINATIONS=http://archive
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/onsite-data-upload_staging:/data/upload_staging"
      - "~/testdata/onsite-sci-dataflow:/sci/dataflow"
    # command: python3 fits_storage/scripts/service_ingest_queue.py --make-previews
    command: python3 fits_storage/scripts/service_ingest_queue.py 

  onsite-export-service:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-onsite
      - postgres-onsite
      - add-to-ingest-queue
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-onsite
      - EXPORT_DESTINATIONS=http://archive
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/onsite-data-upload_staging:/data/upload_staging"
      - "~/testdata/onsite-sci-dataflow:/sci/dataflow"
    command: python3 fits_storage/scripts/service_export_queue.py


  archive-calcache-service:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-archive
      - postgres-archive
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/archive-data-upload_staging:/data/upload_staging"
      - "~/testdata/archive-sci-dataflow:/sci/dataflow"
    command: python3 fits_storage/scripts/service_calcache_queue.py


  archive-preview-service:
    build:
      context: .
      dockerfile: docker/fitsstorage/Dockerfile
    image: fitsstorageutils:latest
    depends_on:
      - postgres-init-archive
      - postgres-archive
    environment:
      - FITS_DB_SERVER=fitsdata:fitsdata@postgres-archive
      - USE_ELK_LOGGING=True
    volumes:
      - "~/testdata/archive-data-upload_staging:/data/upload_staging"
      - "~/testdata/archive-sci-dataflow:/sci/dataflow"
    command: python3 fits_storage/scripts/service_preview_queue.py
