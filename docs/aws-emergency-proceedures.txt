Create a backup disk

EC2 dashboard - EBS - Volumes
Create volume
Give it a name (edit name column)
Select new volume then actions - attach volume
click in instance id field, start typing, select
set device name (or not - gets reassigned anyway...)
click attach
inside instance, dmesg and inspect /proc/partitions to find new device name
mke2fs -t ext4 -m 1 /dev/xvdj
mkdir /backups
mount /dev/xvdj /backups


Doing backups
cd /backups
mkdir YYYYMMDD
cd YYYYMMDD
lvdisplay
lvcreate -L 1G -n backup -s /dev/ssd_ebs/pgdata 
dump -0 -f pgdata.dump.0 /dev/ssd_ebs/backup
lvremove /dev/ssd_ebs/backup
lvcreate -L1G -n backup -s /dev/ebs/data 
dump -0 -f data.dump.0 /dev/ebs/backup 
lvremove /dev/ebs/backup
dump -0au -f root.dump.0 /
umount /backups
in EC2 console, detach it from instance and make a snapshot of it



Snapshot root disk
EC2 dashboard - EBS - Volumes
Select root disk
Reduce activity on volume as much as possible
Actions - create snapshot


Create image of entire system
EC2 dashboard, select instance
actions - create image
add instance store to instance volumes
** warning, this will reboot the instance so it can shapshot while it's down **
click go
** instance will shut down, wait for snapshot, then reboot **
** takes a while longer to finalize the AMI though **


To boot new instance from AMI
EC2 console - Instances
Launch Instance
My AMIs
select AMI
set security group
add instance storage if applicable
launch
ssh to it's public IP address
df -hl
lvdisplay
cat /proc/mdstat


