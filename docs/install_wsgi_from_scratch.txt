clean centos 7 machine standard ISG install. 

- Have ISG set up a user account for you with sudo all.

sudo yum -y install httpd httpd-devel mod_ssl openssl
sudo yum -y install httpd postgresql postgresql-server postgresql-devel

# On AWS centos machines need to install EPEL repository (included by default on ISG config)
sudo yum install -y epel-release

# Also need:
#sudo yum -y install gcc gcc-c++ python-pip python-devel libpng-devel blas lapack openblas openblas-devel gcc-gfortran cfitsio-devel freetype-devel

sudo pip install --upgrade pip
sudo pip install mod_wsgi==4.4.21
sudo pip install psycopg2
sudo pip install sqlalchemy
sudo pip install pyyaml
sudo pip install jinja2
sudo pip install pyfits
sudo pip install pywcs
sudo pip install dateutils
sudo pip install matplotlib
sudo pip install scipy
sudo pip install pandas
sudo pip install astropy

sudo /usr/sbin/groupadd -g 5179 fitsdata
sudo /usr/sbin/useradd -c 'FITS data' -u 5179 -g 5179 fitsdata
sudo passwd fitsdata

# If this is a gemini fits server
sudo vi /etc/group
geminidata:x:502:fitsdata

sudo mkdir /opt/FitsStorage
sudo chown fitsdata:fitsdata /opt/FitsStorage/

#sudo mkdir /opt/python_modules
#sudo chown phirst /opt/python_modules

* Now let's setup the web server
* Modify the variables at the beginning of the following script if needed

cat > /tmp/install_script.sh << EOF
FITSSTORAGE_ROOT=/opt/FitsStorage
# NOTE!!! IF YOU MODIFY THE FOLLOWING, THE CHANGES NEED TO BE TRANSLATED TO
# /etc/systemd/system/fits-httpd.service!!!!!!!!!!!
MODWSGI_DIR=/opt/modwsgi-default

# Explanation of options that we are setting in the MODWSGI_OPTS
# --server-root                        Where to store the server setup information
# --access-log                         Enable access log (off by default)
# --url-alias                          Alias URL for static files (one per alias)
# --python-path                        Additional content for PYTHONPATH

MODWSGI_OPTS="\\
 --server-root \$MODWSGI_DIR \\
 --port 80 \\
 --user apache --group apache \\
 --access-log \\
 --url-alias /static \$FITSSTORAGE_ROOT/htmldocroot \\
 --url-alias /favicon.ico \$FITSSTORAGE_ROOT/htmldocroot/favicon.ico \\
 --url-alias /robots.txt \$FITSSTORAGE_ROOT/htmldocroot/robots.txt \\
 --python-path \$FITSSTORAGE_ROOT \\
"

mkdir \$MODWSGI_DIR

# The extra argument is the WSGI entry point
mod_wsgi-express setup-server \$MODWSGI_OPTS \$FITSSTORAGE_ROOT/fits_storage/wsgihandler.py

# And set let apache handle that dir from now on
# TODO: Rethink this; most probably it's better to have root having permissions
#       over everything that apache doesn't need to touch
chown -R apache:apache \$MODWSGI_DIR
EOF

sudo bash /tmp/install_script.sh

* To run the web server from systemd
sudo cp /opt/FitsStorage/otherfiles/etc_systemd_system_fits-httpd.service /etc/systemd/system/fits-httpd.service


* LOG in as fitsdata and do:
cd /opt/FitsStorage
svn checkout http://scisoft/svn/FitsStorage/trunk .


* Log out and back in as yourself (phirst)

# if using s3
sudo pip install boto3

sudo mkdir /opt/gemini_python
sudo chown phirst /opt/gemini_python
cd /opt/gemini_python
svn checkout http://chara.hi.gemini.edu/svn/DRSoftware/gemini_python/trunk .

cd
# sudo cp /opt/FitsStorage/otherfiles/etc-httpd-conf.d-zz-archive.conf /etc/httpd/conf.d/zz-archive.conf
# sudo cp /opt/FitsStorage/otherfiles/etc-httpd-conf.modules.d-10-python.conf /etc/httpd/conf.modules.d/10-python.conf
# sudo cp /opt/FitsStorage/otherfiles/etc-httpd-conf-httpd.conf /etc/httpd/conf/httpd.conf 
sudo cp /opt/FitsStorage/otherfiles/etc-sysconfig-httpd /etc/sysconfig/httpd
#sudo mkdir /var/www/python-egg-cache
#sudo chmod oug+rwx /var/www/python-egg-cache

# Set up postgres
sudo mkdir /data/pgsql_data
sudo chown postgres:postgres /data/pgsql_data
sudo cp /lib/systemd/system/postgresql.service /etc/systemd/system/
sudo vi /etc/systemd/system/postgresql.service
Environment=PGDATA=/data/pgsql_data
sudo systemctl daemon-reload
sudo postgresql-setup initdb
sudo systemctl start postgresql.service
sudo su - postgres
/usr/bin/createuser --no-superuser --no-createrole --createdb fitsdata
/usr/bin/createuser --no-superuser --no-createrole --no-createdb apache
vi /data/pgsql_data/postgresql.conf
#shared_buffers = 256MB
# 25% of memory if memory > 1GB

effective_cache_size = 8000MB

#
# If there will be remote access to this database (eg for eavedropping)
# set listen_addresses = '*' in postgresql.conf, also:
vi /data/pgsql_data/pg_hba.conf
# At end of file, add a comment line to say what you're adding, then
# eg: host    fitsdata    all         10.1.5.47/32          trust

exit
sudo systemctl restart postgresql.service


# Need to set postgresql and httpd to start at boot
sudo systemctl enable postgresql.service
sudo systemctl enable fits-httpd.service


# Log and backup directories
sudo mkdir /data/logs
sudo chown fitsdata /data/logs
sudo mkdir /data/backups
sudo chown fitsdata /data/backups
sudo mkdir /data/upload_staging
sudo chown fitsdata /data/upload_staging
sudo chmod oug+rwx /data/upload_staging
sudo mkdir /data/z_staging
sudo chown fitsdata /data/z_staging
# if using s3
sudo mkdir /data/s3_staging
sudo chown fitsdata /data/s3_staging
# apache needs access to this to download preview images now
sudo chmod oug+rw /data/s3_staging


# Now get a shell as fitsdata
cd /opt/FitsStorage/fits_storage
vi fits_storage_config.py
# Set things up as appropriate
/usr/bin/createdb fitsdata
python scripts/create_tables.py


# OK, should now be good to go.

# Check with ISG if you need a whitelisted local mail relay on it
# Check with ISG that the development / operations status of the machine


# To run jobs from systemd
sudo cp /opt/FitsStorage/otherfiles/etc_systemd_system_fits-service_ingest_queue1.service /etc/systemd/system/fits-service_ingest_queue1.service
# copy again and edit for siq2 if you want two of them
sudo systemctl start fits-service_ingest_queue1
sudo systemctl enable fits-service_ingest_queue1
# Same for 2 if you want it
# Repeat for export queue and api

