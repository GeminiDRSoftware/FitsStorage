
<IfModule !version_module>
LoadModule version_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_version.so'
</IfModule>

ServerName localhost
ServerRoot '/opt/modwsgi-default'
PidFile '/opt/modwsgi-default/httpd.pid'

DefaultRuntimeDir '/opt/modwsgi-default'

ServerTokens ProductOnly
ServerSignature Off

User ${MOD_WSGI_USER}
Group ${MOD_WSGI_GROUP}

Listen 80

<IfModule !mpm_event_module>
<IfModule !mpm_worker_module>
<IfModule !mpm_prefork_module>
LoadModule mpm_event_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_mpm_event.so'
# LoadModule mpm_worker_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_mpm_worker.so'
# LoadModule mpm_prefork_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_mpm_prefork.so'
</IfModule>
</IfModule>
</IfModule>

# LoadModule http2_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_http2.so'

<IfModule !access_compat_module>
LoadModule access_compat_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_access_compat.so'
</IfModule>
<IfModule !unixd_module>
LoadModule unixd_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_unixd.so'
</IfModule>
<IfModule !authn_core_module>
LoadModule authn_core_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_authn_core.so'
</IfModule>
<IfModule !authz_core_module>
LoadModule authz_core_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_authz_core.so'
</IfModule>

<IfModule !authz_host_module>
LoadModule authz_host_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_authz_host.so'
</IfModule>
<IfModule !mime_module>
LoadModule mime_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_mime.so'
</IfModule>
<IfModule !rewrite_module>
LoadModule rewrite_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_rewrite.so'
</IfModule>
<IfModule !alias_module>
LoadModule alias_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_alias.so'
</IfModule>
<IfModule !dir_module>
LoadModule dir_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_dir.so'
</IfModule>
<IfModule !env_module>
LoadModule env_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_env.so'
</IfModule>
<IfModule !headers_module>
LoadModule headers_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_headers.so'
</IfModule>
<IfModule !filter_module>
LoadModule filter_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_filter.so'
</IfModule>

<IfModule !reqtimeout_module>
LoadModule reqtimeout_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_reqtimeout.so'
</IfModule>

# <IfModule !deflate_module>
# LoadModule deflate_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_deflate.so'
# </IfModule>

# <IfModule !auth_basic_module>
# LoadModule auth_basic_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_auth_basic.so'
# </IfModule>
# <IfModule !auth_digest_module>
# LoadModule auth_digest_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_auth_digest.so'
# </IfModule>
# <IfModule !authz_user_module>
# LoadModule authz_user_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_authz_user.so'
# </IfModule>

<IfModule !proxy_module>
LoadModule proxy_module ${MOD_WSGI_MODULES_DIRECTORY}/mod_proxy.so
</IfModule>
<IfModule !proxy_http_module>
LoadModule proxy_http_module ${MOD_WSGI_MODULES_DIRECTORY}/mod_proxy_http.so
</IfModule>

#LoadModule wsgi_module '/usr/lib64/python2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so'
LoadModule wsgi_module '/usr/local/lib64/python3.6/site-packages/mod_wsgi/server/mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so'


# <IfModule !status_module>
# LoadModule status_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_status.so'
# </IfModule>
# 
# <IfModule !cgid_module>
# LoadModule cgid_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_cgid.so'
# </IfModule>
# 
# <IfModule !cgi_module>
# LoadModule cgi_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_cgi.so'
# </IfModule>

TypesConfig '/etc/mime.types'

HostnameLookups Off
MaxMemFree 64
Timeout 600
ListenBacklog 500
AllowEncodedSlashes NoDecode

RequestReadTimeout header=15-30,MinRate=500 body=15,MinRate=500

# PH - remove this limit
#LimitRequestBody 10485760

# PH - add this:
LoadModule socache_shmcb_module '${MOD_WSGI_MODULES_DIRECTORY}/mod_socache_shmcb.so'
SSLSessionCache "shmcb:/var/cache/httpd/sslsessioncache(512000)"

<Directory />
    AllowOverride None
    Require all denied
</Directory>

WSGIPythonHome '/usr'

WSGIVerboseDebugging 'Off'

WSGIRestrictEmbedded On
WSGISocketPrefix /opt/modwsgi-default/wsgi
WSGIDaemonProcess localhost:80 \
   display-name='(wsgi:localhost:80:0)' \
   home='/opt' \
   threads=60 \
   maximum-requests=0 \
   python-path='/opt/FitsStorage:/opt/DRAGONS' \
   lang='en_US.UTF-8' \
   locale='en_US.UTF-8' \
   listen-backlog=100 \
   queue-timeout=450 \
   socket-timeout=3600 \
   connect-timeout=150 \
   request-timeout=3600 \
   inactivity-timeout=0 \
   startup-timeout=15 \
   deadlock-timeout=600 \
   graceful-timeout=15 \
   eviction-timeout=0 \
   restart-interval=0 \
   shutdown-timeout=5 \
   send-buffer-size=0 \
   receive-buffer-size=0 \
   response-buffer-size=0 \
   response-socket-timeout=0 \
   server-metrics=Off

WSGICallableObject 'application'
WSGIPassAuthorization On
WSGIMapHEADToGET Auto

# WSGIRestrictStdin Off
# WSGIPythonPath '/opt/FitsStorage'

# ExtendedStatus On

WSGIServerMetrics Off

# <Location /server-status>
#     SetHandler server-status
# <IfVersion < 2.4>
#     Order deny,allow
#     Deny from all
#     Allow from localhost
# </IfVersion>
# <IfVersion >= 2.4>
#     Require all denied
#     Require host localhost
# </IfVersion>
# </Location>

# KeepAlive On
# KeepAliveTimeout 0
KeepAlive Off

# AddOutputFilterByType DEFLATE text/plain
# AddOutputFilterByType DEFLATE text/html
# AddOutputFilterByType DEFLATE text/xml
# AddOutputFilterByType DEFLATE text/css
# AddOutputFilterByType DEFLATE text/javascript
# AddOutputFilterByType DEFLATE application/xhtml+xml
# AddOutputFilterByType DEFLATE application/javascript

ErrorLog "|/usr/sbin/rotatelogs \
    -n 30 /opt/modwsgi-default/error_log 100M"
# ErrorLog "/opt/modwsgi-default/error_log"
LogLevel warn

# ErrorLogFormat "None"

<IfModule !log_config_module>
LoadModule log_config_module ${MOD_WSGI_MODULES_DIRECTORY}/mod_log_config.so
</IfModule>
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" combined
LogFormat "undefined" custom
# If we want rotation:
CustomLog "|/usr/sbin/rotatelogs \
    -n 30 /opt/modwsgi-default/access_log 100M" common
# If we do not want rotation...
# CustomLog "/opt/modwsgi-default/access_log" common

# WSGIChunkedRequest On

# WSGITrustedProxyHeaders 
# WSGITrustedProxies 

<IfModule !ssl_module>
LoadModule ssl_module ${MOD_WSGI_MODULES_DIRECTORY}/mod_ssl.so
</IfModule>

<IfModule mpm_prefork_module>
ServerLimit 20
StartServers 1
MaxClients 20
MinSpareServers 1
MaxSpareServers 2
MaxRequestsPerChild 0
</IfModule>

<IfModule mpm_worker_module>
ServerLimit 2
ThreadLimit 10
StartServers 1
MaxClients 20
MinSpareThreads 10
MaxSpareThreads 10
ThreadsPerChild 10
MaxRequestsPerChild 0
ThreadStackSize 262144
</IfModule>

<IfModule mpm_event_module>
ServerLimit 4
ThreadLimit 25
StartServers 1
MaxClients 60
MinSpareThreads 10
MaxSpareThreads 10
ThreadsPerChild 15
MaxRequestsPerChild 0
ThreadStackSize 262144
</IfModule>

# <VirtualHost _default_:80>
# </VirtualHost>

#<VirtualHost _default_:80>
 #<Location />
  #Require all denied
  ## Allow from localhost
 #</Location>
#</VirtualHost>

<VirtualHost *:80>
 ServerName archive.gemini.edu
 RewriteEngine On
 RewriteCond %{HTTPS} off
 RewriteRule (.*) https://archive.gemini.edu:443%{REQUEST_URI}
</VirtualHost>

Listen 443
#<VirtualHost _default_:443>
	#<Location />
		#Require all denied
	#</Location>
	#SSLEngine On
	#SSLCertificateFile /opt/modwsgi-default/CEPO1505224710.cer
	#SSLCertificateKeyFile /opt/modwsgi-default/ca.key
	#SSLCertificateChainFile /opt/modwsgi-default/gsorganizationvalsha2g2r1.cer
#</VirtualHost>
<VirtualHost *:443>
	ServerName archive.gemini.edu
	SSLEngine On
	#SSLCertificateFile /opt/modwsgi-default/CEPO190619027504.cer
	##SSLCertificateFile /opt/modwsgi-default/CEPO180521991118.cer
	#SSLCertificateKeyFile /opt/modwsgi-default/ca2018.key
	##SSLCertificateChainFile /opt/modwsgi-default/gsorganizationvalsha2g2r1.cer
	#SSLCertificateChainFile /opt/modwsgi-default/gsrsaovsslca2018.cer

        SSLCertificateFile /etc/letsencrypt/live/archive.gemini.edu/fullchain.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/archive.gemini.edu/privkey.pem
	SSLCertificateChainFile /etc/letsencrypt/live/archive.gemini.edu/chain.pem

#	Header set Strict-Transport-Security None
#	SSLOptions +StdEnvVars
</VirtualHost>

DocumentRoot '/opt/modwsgi-default/htdocs'

AccessFileName .htaccess

<Directory '/opt/modwsgi-default'>
	AllowOverride None
	<Files handler.wsgi>
	    Require all granted
	</Files>
</Directory>

<Directory '/opt/modwsgi-default/htdocs/'>
    AllowOverride None
    RewriteEngine On
    Include /opt/modwsgi-default/rewrite.conf

    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule .* - [H=wsgi-handler]

    Require all granted
</Directory>

# WSGIErrorOverride On

# <Location />
#     WSGIAccessScript 'None'
# </Location>

WSGIHandlerScript wsgi-handler '/opt/modwsgi-default/handler.wsgi' \
    process-group='localhost:80' application-group=%{GLOBAL}
WSGIImportScript '/opt/modwsgi-default/handler.wsgi' \
    process-group='localhost:80' application-group=%{GLOBAL}


Alias '/static' '/opt/FitsStorage/htmldocroot'

<Directory '/opt/FitsStorage/htmldocroot'>
    AllowOverride None
<IfVersion < 2.4>
    Order allow,deny
    Allow from all
</IfVersion>
<IfVersion >= 2.4>
    Require all granted
</IfVersion>
</Directory>


Alias '/robots.txt' '/opt/FitsStorage/htmldocroot/robots.txt'

<Directory '/opt/FitsStorage/htmldocroot'>
<Files 'robots.txt'>
<IfVersion < 2.4>
    Order allow,deny
    Allow from all
</IfVersion>
<IfVersion >= 2.4>
    Require all granted
</IfVersion>
</Files>
</Directory>


Alias '/favicon.ico' '/opt/FitsStorage/htmldocroot/favicon.ico'

ProxyPass /services/rest http://127.0.0.1:8090/services/rest
ProxyPassReverse /services/rest http://127.0.0.1:8090/services/rest

ProxyPass /services/calibrations http://127.0.0.1:8090/services/calibrations
ProxyPassReverse /services/calibrations http://127.0.0.1:8090/services/calibrations

ProxyPass /services/legacytickets http://127.0.0.1:8090/services/legacytickets
ProxyPassReverse /services/legacytickets http://127.0.0.1:8090/services/legacytickets

Alias '/fss_static' '/opt/FitsStorageServices_static'

<Directory '/opt/FitsStorageServices_static'>
    AllowOverride None
    Require all granted
</Directory>


<Directory '/opt/FitsStorage/htmldocroot'>
<Files '*'>
<IfVersion < 2.4>
    Order allow,deny
    Allow from all
</IfVersion>
<IfVersion >= 2.4>
    Require all granted
</IfVersion>
</Files>
</Directory>

AliasMatch '/(.*\.html)' '/opt/FitsStorage/htmldocroot/$1'
AliasMatch '/(.*\.css)' '/opt/FitsStorage/htmldocroot/$1'
AliasMatch '/(.*\.js)' '/opt/FitsStorage/htmldocroot/$1'


<IfDefine MOD_WSGI_VERIFY_CLIENT>
<Location '/'>
SSLVerifyClient require
SSLVerifyDepth 1
</Location>
</IfDefine>

